{"version":3,"sources":["logo.svg","components/Header.jsx","components/Contents.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","name","id","value","Contents","useState","confirmedData","setConfirmedData","quarantinedData","setQuarantinedData","comparedData","setComparedData","useEffect","fetchEvent","a","axios","get","res","makeData","data","items","arr","reduce","acc","cur","curruntDate","Date","year","getFullYear","month","getMonth","date","getDate","confirmed","Confirmed","active","Active","death","Deaths","recovered","Recovered","findItem","find","push","console","log","labels","map","datasets","label","backgroundColor","fill","borderColor","last","length","options","legend","display","position","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70ebf31c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <h1>COVID-19</h1>\n      <select name=\"\" id=\"\">\n        <option value=\"\">국내</option>\n        <option value=\"\">해외</option>\n      </select>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport { Bar, Doughnut, Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\n\nconst Contents = () => {\n  const [confirmedData, setConfirmedData] = useState({});\n  const [quarantinedData, setQuarantinedData] = useState({});\n  const [comparedData, setComparedData] = useState({});\n\n  useEffect(() => {\n    const fetchEvent = async () => {\n      const res = await axios.get(\n        \"https://api.covid19api.com/total/dayone/country/kr\"\n      );\n      makeData(res.data);\n    };\n\n    const makeData = (items) => {\n      const arr = items.reduce((acc, cur) => {\n        const curruntDate = new Date(cur.Date);\n        const year = curruntDate.getFullYear();\n        const month = curruntDate.getMonth();\n        const date = curruntDate.getDate();\n        const confirmed = cur.Confirmed;\n        const active = cur.Active;\n        const death = cur.Deaths;\n        const recovered = cur.Recovered;\n\n        const findItem = acc.find((a) => a.year === year && a.month === month);\n        if (!findItem) {\n          acc.push({ year, month, date, confirmed, active, death, recovered });\n        }\n        if (findItem && findItem.Date < date) {\n          findItem.year = year;\n          findItem.month = month;\n          findItem.date = date;\n          findItem.confirmed = confirmed;\n          findItem.active = active;\n          findItem.death = death;\n          findItem.recovered = recovered;\n        }\n\n        return acc;\n      }, []);\n      console.log(arr);\n      const labels = arr.map((a) => `${a.month + 1}월`);\n      setConfirmedData({\n        labels,\n        datasets: [\n          {\n            label: \"국내 누적 확진자\",\n            backgroundColor: \"salmon\",\n            fill: true,\n            data: arr.map((a) => a.confirmed),\n          },\n        ],\n      });\n      setQuarantinedData({\n        labels,\n        datasets: [\n          {\n            label: \"월별 격리자 현황\",\n            borderColor: \"salmon\",\n            fill: true,\n            data: arr.map((a) => a.active),\n          },\n        ],\n      });\n      const last = arr[arr.length - 1];\n      setComparedData({\n        labels: [\"확진자\", \"격리해제\", \"사망\"],\n        datasets: [\n          {\n            label: \"누적 확진, 해제, 사망 비율\",\n            backgroundColor: [\"#ff3d67\", \"#059bff\", \"#ffc233\"],\n            borderColor: [\"#ff3d67\", \"#059bff\", \"#ffc233\"],\n            fill: false,\n            data: [last.confirmed, last.recovered, last.death],\n          },\n        ],\n      });\n    };\n\n    fetchEvent();\n  }, []);\n\n  return (\n    <section>\n      <h2>국내 코로나 현황</h2>\n      <div className=\"contents\">\n        <div>\n          <Bar\n            data={confirmedData}\n            options={\n              ({\n                title: {\n                  display: true,\n                  text: \"누적 확진자 추이\",\n                  fontSize: 16,\n                },\n              },\n              { legend: { display: true, position: \"bottum\" } })\n            }\n          />\n        </div>\n        <div>\n          <Line\n            data={quarantinedData}\n            options={\n              ({\n                title: {\n                  display: true,\n                  text: \"월별 격리자 현황\",\n                  fontSize: 16,\n                },\n              },\n              { legend: { display: true, position: \"bottum\" } })\n            }\n          />\n        </div>\n        <div>\n          <Doughnut\n            data={comparedData}\n            options={\n              ({\n                title: {\n                  display: true,\n                  text: `누적 확진, 해제, 사망 (${\n                    new Date().getMonth() + 1\n                  }월)`,\n                  fontSize: 16,\n                },\n              },\n              { legend: { display: true, position: \"bottum\" } })\n            }\n          />\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Contents;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Contents from \"./components/Contents\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Contents />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}